--creating a table for my steam data

CREATE TABLE my_games (
steam_appid	SERIAL PRIMARY KEY,
name VARCHAR (255),
spent_time NUMERIC (5,2));


--copying values from csv file that I cleaned up earlier

COPY my_games (steam_appid,name,spent_time)
FROM 'C:\Datasets\Steam_genresID.csv' 
DELIMITER ',' 
CSV HEADER;


--Finding out how many games I bought
--I am using Alias(AS) here to give the column a name
SELECT COUNT(*) AS total_games
FROM my_games
--total_games=209


--Finding out how much time I spent on playing steam games 
SELECT SUM(hours_spent) AS total_spent_time
FROM my_games
--total_spent_time=3143.20 hours


--Intersting but I want to see actual number of days :)
--I am using ROUND to round up the result after dividing by 24
SELECT ROUND(SUM(spent_time)/24) AS total_spent_days
FROM my_games
--total_spent_days=131 days


--My top-5 games by hours I spent on them
SELECT name,spent_time
FROM my_games
ORDER BY spent_time DESC
LIMIT 5
--Results:The Witcher 3: Wild Hunt,Sid Meier's Civilization V,Sid Meier's Civilization VI,Frostpunk,Cyberpunk 2077


--The game I spent the least time on 
SELECT name,spent_time
FROM my_games
WHERE spent_time!=0
ORDER BY spent_time ASC
LIMIT 1
--Result:Deus Ex: Mankind Divided with 1 hour


--Finding out how many games I actually played out of all games
--using ::float operator to convert the result of the division of two integers to a floating-point number
SELECT COUNT(*) FILTER (WHERE spent_time>0) AS played_games,
       COUNT (*) AS total_games,
	(COUNT(*) FILTER (WHERE spent_time>0)::float / COUNT(*)) * 100 AS percent_played
FROM my_games	
--Result: I played 147 games what is 70& of all games i own


--I want to explore more and I will use a public steam data 
--creating table for the steam data I found on Kaggle
CREATE TABLE steam_data (
appid SERIAL PRIMARY KEY,
name VARCHAR (500),
developer VARCHAR (500),	
publisher VARCHAR (500),
score_rank VARCHAR (500),	
positive INTEGER,	
negative INTEGER,	
owners VARCHAR (255),	
average_forever VARCHAR (255),	
average_2weeks VARCHAR (255),
median_forever VARCHAR (255),	
median_2weeks VARCHAR (255),
price NUMERIC (6,2),
initialprice NUMERIC (6,2),
discount NUMERIC (6,2),
languages VARCHAR (500),
genre VARCHAR (500),
ccu INTEGER,
tags VARCHAR (500));


--copying values from a csv file
COPY steam_data (appid,name,developer,publisher,score_rank,positive,negative,userscore,owners,average_forever,average_2weeks,median_forever,median_2weeks,price,initialprice,discount,languages,genre,ccu,tags)
FROM 'C:\Datasets\steamspy_data.csv' 
DELIMITER ',' 
CSV HEADER;


--I've got the error message "column 'userscore' does not exist in table"
--It seems I missed one column while creating the table. Let's fix it with ALTER 
ALTER TABLE steam_data
ADD userscore INTEGER;


--copying values from a csv file
COPY steam_data (appid,name,developer,publisher,score_rank,positive,negative,owners,average_forever,average_2weeks,median_forever,median_2weeks,price,initialprice,discount,languages,genre,ccu,tags,userscore)
FROM 'C:\Datasets\steamspy_data.csv' 
DELIMITER ',' 
CSV HEADER;


--I've got a bunch of errors here and had to clean up the csv file in Spreadsheets what took a few hours and finally I managed to copy the data
ALTER TABLE steam_data
ALTER COLUMN initialprice TYPE NUMERIC (10,2);

ALTER TABLE steam_data
ALTER COLUMN publisher TYPE VARCHAR (1000);


--removing columns I will not use for my analysis for sure
ALTER TABLE steam_data
DROP COLUMN score_rank,
DROP COLUMN average_forever,
DROP COLUMN average_2weeks,
DROP COLUMN median_forever,
DROP COLUMN median_2weeks,
DROP COLUMN discount,
DROP COLUMN ccu,
DROP COLUMN userscore


--top-10 games with the biggest number of positive reviews
--using COALESCE which replace [null] with the other value, as the table contains many [null]s
SELECT name,COALESCE(positive,0) AS positive_reviews
FROM steam_data
ORDER BY positive_reviews DESC
LIMIT 10
--"Counter-Strike: Global Offensive"
--"Dota 2"
--"Grand Theft Auto V"
--"PUBG: BATTLEGROUNDS"
--"Tom Clancy's Rainbow Six Siege"
--"Terraria"
--"Team Fortress 2"
--"Garry's Mod"
--"Rust"
--"The Witcher 3: Wild Hunt"


--Joining my_games to steam_data
--Using LEFT JOIN
SELECT my_games.name,spent_time, developer,publisher,positive,negative,owners,genre,tags
FROM my_games
LEFT JOIN steam_data ON
my_games.steam_appid=steam_data.appid


--creating a new table to have a quick access to joined tables
CREATE TABLE my_steam_data AS
SELECT my_games.name,spent_time, developer,publisher,positive,negative,owners,genre,tags
FROM my_games
LEFT JOIN steam_data ON
my_games.steam_appid=steam_data.appid


--checking null values for genre for games I played

SELECT * 
FROM my_steam_data
WHERE genre IS NULL AND spent_time>0


--There are 16 games with null in genre. I will update them manually
--I am using UPDATE query and go through 16 games one by one
UPDATE my_steam_data
SET genre='Action' --inserting the genre of the game 
WHERE name='...' --inserting the name of the game instead of '...'

--Finding our the most favorite genres by spent time
SELECT SUM(spent_time) AS hours_spent,genre FROM my_steam_data
GROUP BY genre
ORDER BY SUM(spent_time) DESC
LIMIT 10
--Result: 
	384.20	"RPG"
	335.00	"Adventure, Indie"
	310.60	"Action"
	284.20	"Action, RPG"
	278.30	"Strategy"
	199.51	"Adventure, Casual, Indie"
	195.31	"Action, Adventure"
	167.38	"Adventure"
	111.60	"Simulation, Strategy"
	94.05	"Action, Adventure, Indie"


--I want to find out the most popular genre among all games I played
--I have the genre column but with 1-4 genres in each cell 
--To count it correctly I need to split the column by commas
CREATE TABLE my_game_genres AS --creating the table for an easy access
SELECT genre_1, COUNT(*) AS count 
FROM (
	SELECT UNNEST(STRING_TO_ARRAY(genre, ',')) AS genre_1 --I googled the function converting a text to array(STRING_TO_ARRAY) and UNNEST that duplicate original element of array
  	FROM my_steam_data) AS genres
GROUP BY genre_1
HAVING COUNT(*) > 1;


--deleting extra spaces for correct counting and finally count my favourite genres
--I am using subqueries here
SELECT genre_2, SUM(count) AS total_genres
FROM (SELECT REGEXP_REPLACE(genre_1, ' ','') AS genre_2,count 
FROM my_game_genres
WHERE genre_1 !='Free to Play') AS my_total_genres
GROUP BY genre_2
ORDER BY SUM(count) DESC
--The result:
	"Adventure"	121
	"Action"	87
	"Indie"		82
	"RPG"		32
	"Casual"	30
	"Strategy"	19
	"Simulation"	16
	"Free to Play"	7

END
